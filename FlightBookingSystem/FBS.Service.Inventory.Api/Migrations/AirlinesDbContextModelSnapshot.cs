// <auto-generated />
using System;
using FBS.Service.Inventory.Api.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FBS.Service.Inventory.Api.Migrations
{
    [DbContext(typeof(AirlinesDbContext))]
    partial class AirlinesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FBS.Service.Inventory.Api.Models.AirlineDetails", b =>
                {
                    b.Property<int>("AirlineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AirlineContactAddress");

                    b.Property<string>("AirlineContactNumber");

                    b.Property<string>("AirlineLogo");

                    b.Property<string>("AirlineName");

                    b.Property<bool>("IsBlocked");

                    b.Property<bool>("IsInventory");

                    b.HasKey("AirlineId");

                    b.ToTable("Airlines");
                });

            modelBuilder.Entity("FBS.Service.Inventory.Api.Models.InventoryDetails", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AirlineId");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("FlightNumber");

                    b.Property<string>("FromPlace");

                    b.Property<string>("InstumentUsed");

                    b.Property<string>("MealType");

                    b.Property<int>("NoOfBusinessClassSeats");

                    b.Property<int>("NoOfNonBusinessClassSeats");

                    b.Property<int>("NumberOfRows");

                    b.Property<bool>("OneWay");

                    b.Property<string>("ScheduledDays");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("ToPlace");

                    b.Property<double>("TotalCost");

                    b.Property<bool>("TwoWay");

                    b.HasKey("InventoryId");

                    b.HasIndex("AirlineId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("FBS.Service.Inventory.Api.Models.InventoryDetails", b =>
                {
                    b.HasOne("FBS.Service.Inventory.Api.Models.AirlineDetails", "Airline")
                        .WithMany()
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
